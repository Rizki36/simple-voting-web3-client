/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MyVotesImport } from './routes/my-votes'
import { Route as CreateProposalImport } from './routes/create-proposal'
import { Route as ApiImport } from './routes/api'
import { Route as AnalyticsImport } from './routes/analytics'
import { Route as ActiveVotesImport } from './routes/active-votes'
import { Route as IndexImport } from './routes/index'
import { Route as ProposalsIndexImport } from './routes/proposals.index'
import { Route as VoteVoteIdImport } from './routes/vote.$voteId'
import { Route as ProposalsProposalIdImport } from './routes/proposals.$proposalId'

// Create/Update Routes

const MyVotesRoute = MyVotesImport.update({
  id: '/my-votes',
  path: '/my-votes',
  getParentRoute: () => rootRoute,
} as any)

const CreateProposalRoute = CreateProposalImport.update({
  id: '/create-proposal',
  path: '/create-proposal',
  getParentRoute: () => rootRoute,
} as any)

const ApiRoute = ApiImport.update({
  id: '/api',
  path: '/api',
  getParentRoute: () => rootRoute,
} as any)

const AnalyticsRoute = AnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => rootRoute,
} as any)

const ActiveVotesRoute = ActiveVotesImport.update({
  id: '/active-votes',
  path: '/active-votes',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProposalsIndexRoute = ProposalsIndexImport.update({
  id: '/proposals/',
  path: '/proposals/',
  getParentRoute: () => rootRoute,
} as any)

const VoteVoteIdRoute = VoteVoteIdImport.update({
  id: '/vote/$voteId',
  path: '/vote/$voteId',
  getParentRoute: () => rootRoute,
} as any)

const ProposalsProposalIdRoute = ProposalsProposalIdImport.update({
  id: '/proposals/$proposalId',
  path: '/proposals/$proposalId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/active-votes': {
      id: '/active-votes'
      path: '/active-votes'
      fullPath: '/active-votes'
      preLoaderRoute: typeof ActiveVotesImport
      parentRoute: typeof rootRoute
    }
    '/analytics': {
      id: '/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsImport
      parentRoute: typeof rootRoute
    }
    '/api': {
      id: '/api'
      path: '/api'
      fullPath: '/api'
      preLoaderRoute: typeof ApiImport
      parentRoute: typeof rootRoute
    }
    '/create-proposal': {
      id: '/create-proposal'
      path: '/create-proposal'
      fullPath: '/create-proposal'
      preLoaderRoute: typeof CreateProposalImport
      parentRoute: typeof rootRoute
    }
    '/my-votes': {
      id: '/my-votes'
      path: '/my-votes'
      fullPath: '/my-votes'
      preLoaderRoute: typeof MyVotesImport
      parentRoute: typeof rootRoute
    }
    '/proposals/$proposalId': {
      id: '/proposals/$proposalId'
      path: '/proposals/$proposalId'
      fullPath: '/proposals/$proposalId'
      preLoaderRoute: typeof ProposalsProposalIdImport
      parentRoute: typeof rootRoute
    }
    '/vote/$voteId': {
      id: '/vote/$voteId'
      path: '/vote/$voteId'
      fullPath: '/vote/$voteId'
      preLoaderRoute: typeof VoteVoteIdImport
      parentRoute: typeof rootRoute
    }
    '/proposals/': {
      id: '/proposals/'
      path: '/proposals'
      fullPath: '/proposals'
      preLoaderRoute: typeof ProposalsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/active-votes': typeof ActiveVotesRoute
  '/analytics': typeof AnalyticsRoute
  '/api': typeof ApiRoute
  '/create-proposal': typeof CreateProposalRoute
  '/my-votes': typeof MyVotesRoute
  '/proposals/$proposalId': typeof ProposalsProposalIdRoute
  '/vote/$voteId': typeof VoteVoteIdRoute
  '/proposals': typeof ProposalsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/active-votes': typeof ActiveVotesRoute
  '/analytics': typeof AnalyticsRoute
  '/api': typeof ApiRoute
  '/create-proposal': typeof CreateProposalRoute
  '/my-votes': typeof MyVotesRoute
  '/proposals/$proposalId': typeof ProposalsProposalIdRoute
  '/vote/$voteId': typeof VoteVoteIdRoute
  '/proposals': typeof ProposalsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/active-votes': typeof ActiveVotesRoute
  '/analytics': typeof AnalyticsRoute
  '/api': typeof ApiRoute
  '/create-proposal': typeof CreateProposalRoute
  '/my-votes': typeof MyVotesRoute
  '/proposals/$proposalId': typeof ProposalsProposalIdRoute
  '/vote/$voteId': typeof VoteVoteIdRoute
  '/proposals/': typeof ProposalsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/active-votes'
    | '/analytics'
    | '/api'
    | '/create-proposal'
    | '/my-votes'
    | '/proposals/$proposalId'
    | '/vote/$voteId'
    | '/proposals'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/active-votes'
    | '/analytics'
    | '/api'
    | '/create-proposal'
    | '/my-votes'
    | '/proposals/$proposalId'
    | '/vote/$voteId'
    | '/proposals'
  id:
    | '__root__'
    | '/'
    | '/active-votes'
    | '/analytics'
    | '/api'
    | '/create-proposal'
    | '/my-votes'
    | '/proposals/$proposalId'
    | '/vote/$voteId'
    | '/proposals/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ActiveVotesRoute: typeof ActiveVotesRoute
  AnalyticsRoute: typeof AnalyticsRoute
  ApiRoute: typeof ApiRoute
  CreateProposalRoute: typeof CreateProposalRoute
  MyVotesRoute: typeof MyVotesRoute
  ProposalsProposalIdRoute: typeof ProposalsProposalIdRoute
  VoteVoteIdRoute: typeof VoteVoteIdRoute
  ProposalsIndexRoute: typeof ProposalsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ActiveVotesRoute: ActiveVotesRoute,
  AnalyticsRoute: AnalyticsRoute,
  ApiRoute: ApiRoute,
  CreateProposalRoute: CreateProposalRoute,
  MyVotesRoute: MyVotesRoute,
  ProposalsProposalIdRoute: ProposalsProposalIdRoute,
  VoteVoteIdRoute: VoteVoteIdRoute,
  ProposalsIndexRoute: ProposalsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/active-votes",
        "/analytics",
        "/api",
        "/create-proposal",
        "/my-votes",
        "/proposals/$proposalId",
        "/vote/$voteId",
        "/proposals/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/active-votes": {
      "filePath": "active-votes.tsx"
    },
    "/analytics": {
      "filePath": "analytics.tsx"
    },
    "/api": {
      "filePath": "api.tsx"
    },
    "/create-proposal": {
      "filePath": "create-proposal.tsx"
    },
    "/my-votes": {
      "filePath": "my-votes.tsx"
    },
    "/proposals/$proposalId": {
      "filePath": "proposals.$proposalId.tsx"
    },
    "/vote/$voteId": {
      "filePath": "vote.$voteId.tsx"
    },
    "/proposals/": {
      "filePath": "proposals.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
